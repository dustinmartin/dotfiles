# Easier navigation: .., ..., ~ and -
alias ..="cd .."
alias ...="cd ../.."

# Fasd aliases
alias a='fasd -a'        # any
alias s='fasd -si'       # show / search / select
alias d='fasd -d'        # directory
alias f='fasd -f'        # file
alias sd='fasd -sid'     # interactive directory selection
alias sf='fasd -sif'     # interactive file selection
alias j='fasd_cd -d'     # cd, same functionality as j in autojump
alias z='fasd_cd -d'     # cd, same functionality as j in autojump
alias zz='fasd_cd -d -i' # cd with interactive selection
alias v='f -e vim'       # quick opening files with vim

# Tmux
# alias tmx='tmux -2'
alias tmux="TERM=screen-256color-bce tmux"

# Fix rake to work with zsh
alias rake="noglob rake"

# Miscellaneous Helpers
alias reload="source ~/.zshrc"

# Set vim as the editor
export EDITOR='vim'

# List all files colorized in long format, including dot files
alias la="ls -Gla"
alias ll="ls -Gla"

# Show colors for ls
alias ls="ls -G"

# Show all hidden files
alias showf="defaults write com.apple.finder AppleShowAllFiles TRUE; killall Finder"

# Hide all hidden files
alias hidef="defaults write com.apple.finder AppleShowAllFiles FALSE; killall Finder"

# Git
alias g='git'
alias gs='git status -sb'
alias gst='git status'
alias gpl='git pull'
alias gpu='git push'
alias gf='git fetch'
alias gm='git merge --no-ff'
alias gco='git checkout'
alias gb='git branch'
alias grb='git rebase'
alias gd='git diff'
alias ga='git add'
alias gl='git log --graph --stat --abbrev-commit --date=relative'
alias gpb='git pb'

# Commit staged changed and provide some stats on the commit
alias gc='git commit -v -m'

# Stage all updated/added/deleted files and commit
alias gca='git add -u && git add . && git commit -v -m'

# Create a new branch
alias gcob='git checkout -b'

# Stage all updated/added/deleted files
alias gaa='git add -u && git add . && git status'

# Updates a branch
# gup() {
#     echo "> Fetching updates from origin"
#     git fetch
#     echo "> Rebasing origin/team-ccr"
#     git rebase origin/team-ccr
# }

# Interactive rebase
# gir() {
#     echo "Rebasing (interactive) origin/team-ccr"
#     git rebase -i origin/team-ccr
# }

# Get the current branch
current_branch() {
    ref=$(git symbolic-ref HEAD 2> /dev/null) || return
    echo ${ref#refs/heads/}
}

# Returns if the git repo in the current directory is dirty
is_git_dirty() {
    if [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] then
        echo true
    else
        echo false
    fi
}
