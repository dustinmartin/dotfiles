snippet id "import" b
import { $1 } from '$2'
endsnippet

snippet try "try/catch" b
try {
	$1
} catch (error) {
	$2
}
endsnippet

snippet log "logger.info()" b
logger.${1:info}({ ${2} }, '${3}');
endsnippet

snippet con "console.log()" b
console.log('${1} >>>>>>>', $1);
endsnippet

snippet pretty "JSON.stringify" b
console.log('${1} >>>>>>>', JSON.stringify($1, null, 2));
endsnippet

snippet timer "hirestimer" b
import timer from 'hirestime';

const stopTimer = timer();
const runTime = stopTimer();
endsnippet

snippet time "console.time()" b
console.time('>>>> $1');
console.timeEnd('>>>> $1');
endsnippet

snippet switch "switch" b
switch ($1){
case '$2':
	break;
default:
	break;
}
endsnippet

snippet fn "function" w
($1) => {
	$2
}
endsnippet

snippet des "describe" b
describe('$1', () => {
	${2:${VISUAL}}
});
endsnippet

snippet desc "describe" b
describe('$1', () => {
	${2:${VISUAL}}
});
endsnippet

snippet beforeEach "beforeEach" b
beforeEach(() => {
	$2
});
endsnippet

snippet bef "beforeEach" b
beforeEach(() => {
	$2
});
endsnippet

snippet ite "it - empty" b
it.todo('$1');
endsnippet

snippet it "it - function" b
it('$1', async () => {
	$2
});
endsnippet

snippet if "if statement" b
if ($1) {
	$2
}
endsnippet

snippet for "for loop" b
for (let i = 0; i < $1; i++) {
	$2
}
endsnippet

# vim:ft=snippets:
