snippet con "console.log()" b
console.log(${0:${VISUAL}});
endsnippet

snippet pretty "JSON.stringify" b
console.log(JSON.stringify(${0:${VISUAL:variable}}, null, 2));
endsnippet

# snippet time "console.log()" b
# console.time( $0 );
# console.timeEnd( $0 );
# endsnippet

# snippet time "console.time()"
# console.time( $0 );
# ${VISUAL}
# console.timeEnd( $1 );
# endsnippet

snippet switch "switch" b
switch($1){
	case '$2':
		break;
	default:
		break;
}
endsnippet

snippet fna "function" w
($1) => { $2 }
endsnippet

snippet fn "function" w
function$1($2) {
	$3
}
endsnippet

snippet fne "function" w
const $1 = function($2) {
	$3
};
endsnippet

snippet des "describe" b
describe('$1', function() {
	${2:${VISUAL}}
});
endsnippet

snippet desc "describe" b
describe('$1', function() {
	${2:${VISUAL}}
});
endsnippet

snippet bef "beforeEach" b
beforeEach('$1', function() {
	${2:${VISUAL}}
});
endsnippet

snippet spec "spec test" b
describe('$1', function() {

	beforeEach(function() {
		$2
	});

	it('', function() {
		$3
	});

});
endsnippet

snippet ite "it - empty" b
it('$1');$2
endsnippet

snippet it "it - function" b
it('$1', function() {
	$2
});
endsnippet

snippet if "if statement" b
if ($1) {
	$2
}
endsnippet

snippet for "for loop" b
for (var i=0; i<$1; i++) {
	$2
}
endsnippet

# vim:ft=snippets:
