call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

" ---------------------------------------------------------------------------
" General
" ---------------------------------------------------------------------------

syntax on 						" Enable syntax highlighting
filetype plugin indent on 		" Detect and handle filetypes
set nocompatible 				" Don't be compatible with Vi

" ---------------------------------------------------------------------------
" Colors / Theme / Font
" ---------------------------------------------------------------------------

colorscheme solarized 			" Set the colorscheme
set background=dark 			" Solarize has different color schemes.
set guifont=Monaco:h13			" Set the font style and size

" ---------------------------------------------------------------------------
" UI
" ---------------------------------------------------------------------------

set autoread 					" reload files (no local changes only)
set shiftwidth=4 				" Number of spaces to use for each step of (auto)indent
set tabstop=4 					" Number of spaces that a <Tab> in the file counts for
set autoindent 					" Copy the indent from the current line when starting a new line
set guioptions-=T 				" Hide the toolbar
set lines=55 columns=140 		" Set the window size
set nowrap						" Turn word wrapping off. :set wrap turns it back on.
set nu!							" Turn on line numbers
set tabpagemax=50 				" Increase the number of allowed tabs
set showtabline=2 				" Always show the tabline
set guioptions-=L				" Disable left scrollbar
set guioptions-=r				" Disable right scrollbar
set ruler						" Turn on row,column dislay on status bar
set backspace=2           		" Allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] 		" Backspace and cursor keys wrap to
let macvim_hig_shift_movement=1 " Turn on selection via shift+arrow keys
set wildmenu 					" Command completion with tab
set visualbell 					" Disable 'beep' for wrong commands and do screen flash
set cursorline 					" Highlights the cursor line
set ttyfast 					" Makes scrolling smoother
set laststatus=2 				" A more informatives status line
set textwidth=0 				" Prevent Vim from wrapping lines
set wrapmargin=0 				" Prevent Vim from wrapping lines

" ---------------------------------------------------------------------------
" Windows
" ---------------------------------------------------------------------------

" Open a new split and switch to it
noremap <leader>v <C-w>v<C-w>l
noremap <leader>s <C-w>s<C-w>j
noremap <leader>c :close<CR>

" Move around the splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Move around the splits
nnoremap <C-S-left> <C-w>h
nnoremap <C-S-down> <C-w>j
nnoremap <C-S-up> <C-w>k
nnoremap <C-S-right> <C-w>l

" ---------------------------------------------------------------------------
" Searching
" ---------------------------------------------------------------------------

set ignorecase 							" Makes searches case insensitive if search string is all lower case
set smartcase 							" Makes searches case SENSITIVE if search string contains an uppercase letter
set gdefault                    		" search/replace 'globally' (on a line) by default
set incsearch 							" Show where the pattern matches so far
set showmatch 							" Highlight the matching bracket when one is inserted
set hlsearch 							" Highlight search results (as you type)
nnoremap <leader><space> :noh<cr> 		" Clear a search

" ----------------------------------------------------------------------------
" Backups
" ----------------------------------------------------------------------------

set nobackup                   			" do not keep backups after close
set nowritebackup               		" do not keep a backup while working
set noswapfile                 			" don't keep swp files either
set backupdir=~/.vim/backup  			" store backups under ~/.vim/backup
set backupcopy=yes              		" keep attributes of original file
set directory=~/.vim/swap				" keep swp files under ~/.vim/swap

" ----------------------------------------------------------------------------
" Sessions
" ----------------------------------------------------------------------------

function! RestoreSession()
  if argc() == 0 "vim called without arguments
    execute 'source ~/.vim/session'
  end
endfunction

function! SaveSession()
  if argc() == 0 "vim called without arguments
	execute 'mksession! ~/.vim/session'
  end
endfunction

" autocmd VimEnter * call RestoreSession()
autocmd VimLeave * call SaveSession()

" -----------------------------------------------------------
"  Tabs
" -----------------------------------------------------------

" Set the tab labels
set guitablabel=%t\ %m

" Open a new tab
map <leader>t :tabnew<CR>

" C-TAB and C-SHIFT-TAB cycle tabs forward and backward
nmap <c-tab> :tabnext<cr>
nmap <c-s-tab> :tabprevious<cr>

" -----------------------------------------------------------
"  Function Key Shortcuts
" -----------------------------------------------------------

" F1 to toggle nerdtree
inoremap <F1> <ESC> :NERDTreeToggle<CR>
vnoremap <F1> <ESC> :NERDTreeToggle<CR>
nnoremap <F1> :NERDTreeToggle<CR>

" F2 
inoremap <F2> <ESC>
vnoremap <F2> <ESC>
nnoremap <F2>

" F11 to load the previous session
inoremap <F11> <ESC> :source ~/.vim/session<CR>
vnoremap <F11> <ESC> :source ~/.vim/session<CR>
nnoremap <F11> :source ~/.vim/session<CR>

" F12 to reload vimrc
inoremap <F12> <ESC> :source $MYVIMRC<CR>
vnoremap <F12> <ESC> :source $MYVIMRC <CR>
nnoremap <F12>  :source $MYVIMRC <CR>

" -----------------------------------------------------------
" Misc Mappings
" -----------------------------------------------------------

" Trim trailing white space
nnoremap <leader>w :%s/\s\+$//<cr>:let @/=''<CR>

" Map tab to indent
vmap <Tab> >gv

" Map shift+tab to unindent
vmap <S-Tab> <gv

" Move between bracket pairs
nnoremap <tab> %
vnoremap <tab> %

" Map ; to :
nnoremap ; :

" Toggle between insert and normal mode
nnoremap <C-space> a
imap <C-space> <Esc>
nnoremap <S-space> a
imap <S-space> <Esc>

" Visually select the text that was last edited/pasted
nmap gV `[v`]

" -----------------------------------------------------------
" Movement 
" -----------------------------------------------------------

" Movement by scree line instead of file line
nnoremap j gj
nnoremap k gk

" Make arrow keys work in visual mode
vnoremap <LEFT> h
vnoremap <RIGHT> l
vnoremap <UP> gk
vnoremap <DOWN> gj

" Make arrow keys work *properly* in normal mode
nnoremap <LEFT> h
nnoremap <RIGHT> l
nnoremap <UP> gk
nnoremap <DOWN> gj

" Bubble single lines
nmap <C-Up> [e
nmap <C-Down> ]e

" Bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv
